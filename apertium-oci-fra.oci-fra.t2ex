<?xml version="1.0" encoding="UTF-8"?>
<interchunk>
  <section-def-cats>
    <def-cat n="SN">
      <cat-item tags="SN"/>
      <cat-item tags="SN.*"/>
    </def-cat>
    <def-cat n="SN_pl">
      <cat-item tags="SN.*.pl"/>
      <cat-item tags="SN.*.pl.*"/>
    </def-cat>
    <def-cat n="SN_SPron">
      <cat-item tags="SN"/>
      <cat-item tags="SN.*"/>
      <cat-item tags="SPron"/>
      <cat-item tags="SPron.*"/>
    </def-cat>
    <def-cat n="SA">
      <cat-item tags="SA"/>
      <cat-item tags="SA.*"/>
    </def-cat>
    <def-cat n="PP">
      <cat-item lemma="pp" tags="SA.*"/>
      <cat-item tags="SA.pp.*"/>
    </def-cat>
    <def-cat n="SPron">
      <cat-item tags="SPron"/>
      <cat-item tags="SPron.*"/>
    </def-cat>
    <def-cat n="SPron_tn">
      <cat-item tags="SPron.tn.*"/>
    </def-cat>
    <def-cat n="SPron_pro">
      <cat-item tags="SPron.pro"/>
      <cat-item tags="SPron.pro.*"/>
    </def-cat>
    <def-cat n="SAdv">
      <cat-item tags="SAdv"/>
      <cat-item tags="SAdv.*"/>
    </def-cat>
    <def-cat n="SAdv_mieux">
      <cat-item lemma="mieux" tags="SAdv"/>
      <cat-item lemma="mieux" tags="SAdv.*"/>
    </def-cat>
    <def-cat n="SV">
      <cat-item tags="SV"/>
      <cat-item tags="SV.*"/>
    </def-cat>
    <def-cat n="SV_vbhaver">
      <cat-item tags="SV.vbhaver"/>
      <cat-item tags="SV.vbhaver.*"/>
    </def-cat>
    <def-cat n="SV_vbmod">
      <cat-item tags="SV.vbmod"/>
      <cat-item tags="SV.vbmod.*"/>
    </def-cat>
    <def-cat n="SV_partitiu">
      <cat-item tags="SV.vbser.partitiu.*"/>
      <cat-item tags="SV.vbhaver.partitiu.*"/>
      <cat-item tags="SV.vblex.partitiu.*"/>
    </def-cat>
    <def-cat n="SV_inf">
      <cat-item tags="SV.*.inf"/>
      <cat-item tags="SV.*.inf.*"/>
    </def-cat>

    <def-cat n="SDet">
      <cat-item tags="Det"/>
      <cat-item tags="Det.*"/>
    </def-cat>

    <def-cat n="Num">
      <cat-item tags="Num"/>
      <cat-item tags="Num.*"/>
    </def-cat>

    <def-cat n="cnjcoo">
      <cat-item tags="cnjcoo"/>
      <cat-item tags="cnjcoo.*"/>
    </def-cat>

    <def-cat n="cnjsub">
      <cat-item tags="cnjsub"/>
      <cat-item tags="cnjsub.*"/>
    </def-cat>

    <def-cat n="cnjadv">
      <cat-item tags="cnjadv"/>
      <cat-item tags="cnjadv.*"/>
    </def-cat>

    <def-cat n="rel">
      <cat-item tags="rel"/>
      <cat-item tags="rel.*"/>
    </def-cat>

    <def-cat n="PREP">
      <cat-item tags="PREP"/>
      <cat-item tags="PREP.*"/>
    </def-cat>
    <def-cat n="PREP_de">
      <cat-item lemma="de" tags="PREP"/>
    </def-cat>

    <def-cat n="UNK">
      <cat-item tags="unknown"/>
    </def-cat>
    <def-cat n="SN_UNK">
      <cat-item tags="SN"/>
      <cat-item tags="SN.*"/>
      <cat-item tags="unknown"/>
    </def-cat>
    <def-cat n="SN_SA_UNK">
      <cat-item tags="SN"/>
      <cat-item tags="SN.*"/>
      <cat-item tags="SA"/>
      <cat-item tags="SA.*"/>
      <cat-item tags="SAcomp.*"/>
      <cat-item tags="unknown"/>
      <cat-item tags="unknown"/>
      <cat-item tags="unknown.*"/>
    </def-cat>

    <def-cat n="CM">
      <cat-item tags="CM"/>
    </def-cat>
    <def-cat n="LPAR">
      <cat-item tags="LPAR"/>
    </def-cat>
    <def-cat n="SENT">
      <cat-item tags="SENT"/>
    </def-cat>
    <def-cat n="SENT_PREP_CNJ_REL">
      <cat-item tags="SENT"/>
      <cat-item tags="PREP"/>
      <cat-item tags="cnjsub"/>
      <cat-item tags="cnjadv"/>
      <cat-item tags="cnjcoo"/>
      <cat-item tags="rel"/>
      <cat-item tags="rel.*"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="chunk">
      <attr-item tags="SN"/>
      <attr-item tags="SV"/>
    </def-attr>

    <def-attr n="pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>

    <def-attr n="gen">
      <attr-item tags="m"/>
      <attr-item tags="f"/>
      <attr-item tags="mf"/>
      <attr-item tags="GD"/>
    </def-attr>

    <def-attr n="sl_gen">
      <attr-item tags="sl_m"/>
      <attr-item tags="sl_f"/>
      <attr-item tags="sl_mf"/>
    </def-attr>

    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
      <attr-item tags="ND"/>
    </def-attr>

  </section-def-attrs>

  <section-def-vars>
    <def-var n="genero"/>
    <def-var n="numero"/>
  </section-def-vars>

  <section-def-macros>

    <def-macro n="f_concord0" npar="1">
      <choose>
<!--To determine value of variables of gender and
                 number and propagate to other rules.  Variables are
                 not used again in this rule -->
        <when>
          <test>
            <equal>
              <clip pos="1" part="gen"/>
              <lit-tag v="m"/>
            </equal>
          </test>
          <let>
            <var n="genero"/>
            <lit-tag v="m"/>
          </let>
        </when>
        <when>
          <test>
            <equal>
              <clip pos="1" part="gen"/>
              <lit-tag v="f"/>
            </equal>
          </test>
          <let>
            <var n="genero"/>
            <lit-tag v="f"/>
          </let>
        </when>
      </choose>
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" part="nbr"/>
              <lit-tag v="sg"/>
            </equal>
          </test>
          <let>
            <var n="numero"/>
            <lit-tag v="sg"/>
          </let>
        </when>
        <when>
          <test>
            <equal>
              <clip pos="1" part="nbr"/>
              <lit-tag v="pl"/>
            </equal>
          </test>
          <let>
            <var n="numero"/>
            <lit-tag v="pl"/>
          </let>
        </when>
      </choose>
    </def-macro>

    <def-macro n="f_concord1" npar="1">
      <call-macro n="f_concord0"><with-param pos="1"/></call-macro>
      <choose>
        <when>
          <test>
<!-- If word has GD or ND, we try to assign the
              gender or number of the previous rule. If there is no
              value for the gender or number variable from previous
              rules, gender will be masculine and number singular.-->
            <equal>
              <clip pos="1" part="gen"/>
              <lit-tag v="GD"/>
            </equal>
          </test>
          <choose>
            <when>
              <test>
                <equal>
                  <var n="genero"/>
                  <lit-tag v="f"/>
                </equal>
              </test>
              <let>
                <clip pos="1" part="gen"/>
                <lit-tag v="f"/>
              </let>
            </when>
            <otherwise>
              <let>
                <clip pos="1" part="gen"/>
                <lit-tag v="m"/>
              </let>
            </otherwise>
          </choose>
        </when>
      </choose>
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" part="nbr"/>
              <lit-tag v="ND"/>
            </equal>
          </test>
          <choose>
            <when>
              <test>
                <equal>
                  <var n="numero"/>
                  <lit-tag v="pl"/>
                </equal>
              </test>
              <let>
                <clip pos="1" part="nbr"/>
                <lit-tag v="pl"/>
              </let>
            </when>
            <otherwise>
              <let>
                <clip pos="1" part="nbr"/>
                <lit-tag v="sg"/>
              </let>
            </otherwise>
          </choose>
        </when>
      </choose>
    </def-macro>

    <def-macro n="f_concord2" npar="2">
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
    </def-macro>

    <def-macro n="f_concord3" npar="3">
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="3"/></call-macro>
    </def-macro>

    <def-macro n="f_bcond" npar="2"><!--Per mirar si el blanc conté o no format. Cal posar aquesta funció en les regles en què desaparegui alguna paraula, per tal de decidir si el blanc de la paraula eliminada s'ha d'eliminar o conservar. Si conté format cal conservar-la, si no en conté cal eliminar-la perquè no apareguin dos espais seguits. -->
     <choose>
       <when>
         <test>
           <not>
             <equal>
               <b pos="1"/>
               <lit v=" "/>
             </equal>
            </not>
         </test>
         <out>
           <b pos="1"/>
         </out>
       </when>
     </choose>
    </def-macro>

  </section-def-macros>

  <section-rules>

    <!-- RÈGLAS PER LA GESTION DE MIEUX -->

    <rule comment="RÈGLA: INF SAdv_mieux > SAdv_mieux INF (parlar melhor > mieux parler)">
      <pattern>
        <pattern-item n="SV_inf"/>
        <pattern-item n="SAdv_mieux"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="2" part="lem"/>
            </get-case-from>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RÈGLA: SPron_pro INF SAdv_mieux > SAdv_mieux SPron_pro INF (li dire melhor > mieux lui dire)">
      <pattern>
        <pattern-item n="SPron_pro"/>
        <pattern-item n="SV_inf"/>
        <pattern-item n="SAdv_mieux"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="3" part="lem"/>
            </get-case-from>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b pos="2"/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RÈGLA: SPron_pro SPron_pro INF SAdv_mieux > SAdv_mieux SPron_pro SPron_pro INF (li o dire melhor > mieux le lui dire)">
      <pattern>
        <pattern-item n="SPron_pro"/>
        <pattern-item n="SPron_pro"/>
        <pattern-item n="SV_inf"/>
        <pattern-item n="SAdv_mieux"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="4" part="lem"/>
            </get-case-from>
            <clip pos="4" part="tags"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b pos="2"/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b pos="3"/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RÈGLA: PP SAdv_mieux > SAdv_mieux PP">
      <pattern>
        <pattern-item n="PP"/>
        <pattern-item n="SAdv_mieux"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="2" part="lem"/>
            </get-case-from>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- FIN RÈGLAS PER LA GESTION DE MIEUX -->

  </section-rules>
</interchunk>

<!--
Resources:
    https://wiki.apertium.org/wiki/Chunking:_A_full_example
    https://wiki.apertium.org/wiki/Chunking
    https://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    https://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    https://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->
